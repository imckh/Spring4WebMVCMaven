<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.jpg</url-pattern>
        <!--表示允许访问*.jpg-->
        <!--为什么要加这一段呢？
            因为配置springmvc的servlet的时候，使用的路径是"/"，导致静态资源在默认情况下不能访问，
            所以要加上这一段，允许访问jpg。 并且必须加在springmvc的servlet之前
            如果你配置spring-mvc使用的路径是/*.do，就不会有这个问题了-->
    </servlet-mapping>

    <!--配置dispatcherservlet 以及mapping-->
    <servlet>
        <servlet-name>spring</servlet-name>
        <!--1.Dispatcherservlet
　　      DispatcherServlet是前置控制器，配置在web.xml文件中的。拦截匹配的请求，Servlet拦截匹配规则要自已定义，把拦截下来的请求，依据相应的规则分发到目标Controller来处理，是配置spring MVC的第一步。-->
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--load-on-startup：表示启动容器时初始化该Servlet；-->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>spring</servlet-name>
        <!--url-pattern：表示哪些请求交给Spring Web MVC处理， -->
        <!--“/” 是用来定义默认servlet映射的。-->
        <!--也可以如“*.html”表示拦截所有以html为扩展名的请求。-->
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <!--自此请求已交给Spring Web MVC框架处理，-->
    <!--因此我们需要配置Spring的配置文件，-->
    <!--默认DispatcherServlet会加载WEB-INF/[DispatcherServlet的Servlet名字]-servlet.xml配置文件。-->
    <!--<servlet-mapping>-->
        <!--<servlet-name>spring</servlet-name>-->
        <!--<url-pattern>/</url-pattern>-->
    <!--</servlet-mapping>-->
    <!--<context-param>-->
        <!--<param-name>contextConfigLocation</param-name>-->
        <!--<param-value>WEB-INF/spring-servlet.xml</param-value>-->
    <!--</context-param>-->
    <!--<listener>-->
        <!--<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>-->
    <!--</listener>-->


    <!--在Spring MVC中处理中文问题和Filter处理中文问题是一样的手段-->
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
</web-app>